package im.vector.app.kelare.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import im.vector.app.kelare.network.models.GroupMessage;
import im.vector.app.kelare.network.models.GroupRoom;
import im.vector.app.kelare.network.models.PeopleMessage;
import im.vector.app.kelare.network.models.PeopleRoom;
import im.vector.app.kelare.network.models.SipMessage;

import im.vector.app.kelare.greendao.GroupMessageDao;
import im.vector.app.kelare.greendao.GroupRoomDao;
import im.vector.app.kelare.greendao.PeopleMessageDao;
import im.vector.app.kelare.greendao.PeopleRoomDao;
import im.vector.app.kelare.greendao.SipMessageDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig groupMessageDaoConfig;
    private final DaoConfig groupRoomDaoConfig;
    private final DaoConfig peopleMessageDaoConfig;
    private final DaoConfig peopleRoomDaoConfig;
    private final DaoConfig sipMessageDaoConfig;

    private final GroupMessageDao groupMessageDao;
    private final GroupRoomDao groupRoomDao;
    private final PeopleMessageDao peopleMessageDao;
    private final PeopleRoomDao peopleRoomDao;
    private final SipMessageDao sipMessageDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        groupMessageDaoConfig = daoConfigMap.get(GroupMessageDao.class).clone();
        groupMessageDaoConfig.initIdentityScope(type);

        groupRoomDaoConfig = daoConfigMap.get(GroupRoomDao.class).clone();
        groupRoomDaoConfig.initIdentityScope(type);

        peopleMessageDaoConfig = daoConfigMap.get(PeopleMessageDao.class).clone();
        peopleMessageDaoConfig.initIdentityScope(type);

        peopleRoomDaoConfig = daoConfigMap.get(PeopleRoomDao.class).clone();
        peopleRoomDaoConfig.initIdentityScope(type);

        sipMessageDaoConfig = daoConfigMap.get(SipMessageDao.class).clone();
        sipMessageDaoConfig.initIdentityScope(type);

        groupMessageDao = new GroupMessageDao(groupMessageDaoConfig, this);
        groupRoomDao = new GroupRoomDao(groupRoomDaoConfig, this);
        peopleMessageDao = new PeopleMessageDao(peopleMessageDaoConfig, this);
        peopleRoomDao = new PeopleRoomDao(peopleRoomDaoConfig, this);
        sipMessageDao = new SipMessageDao(sipMessageDaoConfig, this);

        registerDao(GroupMessage.class, groupMessageDao);
        registerDao(GroupRoom.class, groupRoomDao);
        registerDao(PeopleMessage.class, peopleMessageDao);
        registerDao(PeopleRoom.class, peopleRoomDao);
        registerDao(SipMessage.class, sipMessageDao);
    }
    
    public void clear() {
        groupMessageDaoConfig.clearIdentityScope();
        groupRoomDaoConfig.clearIdentityScope();
        peopleMessageDaoConfig.clearIdentityScope();
        peopleRoomDaoConfig.clearIdentityScope();
        sipMessageDaoConfig.clearIdentityScope();
    }

    public GroupMessageDao getGroupMessageDao() {
        return groupMessageDao;
    }

    public GroupRoomDao getGroupRoomDao() {
        return groupRoomDao;
    }

    public PeopleMessageDao getPeopleMessageDao() {
        return peopleMessageDao;
    }

    public PeopleRoomDao getPeopleRoomDao() {
        return peopleRoomDao;
    }

    public SipMessageDao getSipMessageDao() {
        return sipMessageDao;
    }

}
